name: CI

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download Ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    
    - name: Extract Ngrok
      run: Expand-Archive ngrok.zip
    
    - name: Ngrok Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
    
    - name: Enable Firewall Rule
      run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    
    - name: Enable User Auth
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    
    - name: Set Local User Password
      run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText $Env:ADMIN_PASSWORD -Force)
      env:
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    
    - name: Download Remote-RTC
      run: curl -L -o Remote-RTC.zip https://github.com/DigitalSerpant/Remote-RTC/releases/download/1.0.1/Remote.RTC.1.0.1.zip
    
    - name: Extract Remote-RTC
      run: Expand-Archive Remote-RTC.zip

    - name: Create password.txt
      run: echo 123123 > password.txt
    
    - name: Launch Remote-RTC
      run: Start-Process -FilePath "Remote-RTC\background.exe" -NoNewWindow -PassThru
    
    - name: Create Tunnel (Port 6966)
      run: Start-Process -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 6966" -NoNewWindow -PassThru

    - name: Create Tunnel (Port 3389)
      run: Start-Process -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow -PassThru

    - name: Wait for Ngrok
      run: Start-Sleep -Seconds 10

    - name: Display Ngrok URL (Port 6966)
      run: |
        $ngrok_6966 = .\ngrok\ngrok.exe tunnels
        $url_6966 = $ngrok_6966 | ConvertFrom-Json | Select-Object -ExpandProperty tunnels | Where-Object { $_.config.addr -eq 'tcp://localhost:6966' } | Select-Object -ExpandProperty public_url
        Write-Host "Ngrok URL for Port 6966: $url_6966"

    - name: Display Ngrok URL (Port 3389)
      run: |
        $ngrok_3389 = .\ngrok\ngrok.exe tunnels
        $url_3389 = $ngrok_3389 | ConvertFrom-Json | Select-Object -ExpandProperty tunnels | Where-Object { $_.config.addr -eq 'tcp://localhost:3389' } | Select-Object -ExpandProperty public_url
        Write-Host "Ngrok URL for Port 3389: $url_3389"
      
    - name: Run Tests
      run: npm test
